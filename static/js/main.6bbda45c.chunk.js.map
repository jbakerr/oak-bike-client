{"version":3,"sources":["components/PageHome/index.jsx","components/Page404/index.jsx","constants/report.js","utils/report.js","components/ReportObstruction/Upload.jsx","components/ReportObstruction/Location.jsx","components/ReportObstruction/Details.jsx","components/ReportObstruction/index.jsx","App.js","serviceWorker.js","index.js"],"names":["PageHome","react_default","a","createElement","Link","to","Page404","coordsOakland","lat","lng","initDetails","name","contact","notes","Upload","_ref","setUpload","setStatus","onDrop","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","files","wrap","_context","prev","next","console","log","Promise","resolve","reject","setTimeout","url","concat","replace","c","r","Math","random","toString","sent","stop","this","_x","apply","arguments","es","_ref3","getRootProps","getInputProps","isDragActive","assign","className","Location","initCenter","initZoom","setLocation","_useState","useState","_useState2","slicedToArray","center","setCenter","_useState3","_useState4","zoom","setZoom","useEffect","options","length","undefined","navigator","geolocation","getCurrentPosition","location","error","getUserLocation","then","_location$coords","coords","latitude","longitude","catch","warn","Fragment","Map","style","height","onDrag","event","target","getCenter","onZoom","getZoom","TileLayer","attribution","Marker","position","Popup","onClick","Details","upload","size","ReportObstruction","status","_useState5","_useState6","_useState7","_useState8","ReportObstruction_Upload","ReportObstruction_Location","ReportObstruction_Details","App","BrowserRouter","basename","Switch","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6bbda45c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nconst PageHome = () => (\n  <div>\n    <h1>Home Page</h1>\n    <ul>\n      <li><Link to=\"/report\">Report Obstruction</Link></li>\n      <li><Link to=\"/nopers\">Bad Link</Link></li>\n    </ul>\n  </div>\n);\n\nexport default PageHome;\n","import React from \"react\";\n\nconst Page404 = () => (\n  <div>\n    <p>gosh darn we got us a 404 page not heckin found</p>\n  </div>\n);\n\nexport default Page404;\n","export const UPLOAD = \"UPLOAD\";\nexport const LOCATION = \"LOCATION\";\nexport const DETAILS = \"DETAILS\";\nexport const SUBMISSION = \"SUBMISSION\";\nexport const COMPLETE = \"COMPLETE\";\n\nexport const USE_MY_LOCATION = \"USE_MY_LOCATION\";\nexport const DROP_PIN_ON_MAP = \"DROP_PIN_ON_MAP\";\nexport const ENTER_ADDRESS = \"ENTER_ADDRESS\";\n\nexport const coordsOakland = {\n  lat: 37.8131418,\n  lng: -122.2662702\n};\n\nexport const initDetails = {\n  name: '',\n  contact: '',\n  notes: '',\n};\n","\nexport const getUserLocation = (options = {}) => new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(\n    location => resolve(location),\n    error => reject(error),\n    options,\n  );\n});\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport const fakeImageUpload = file => new Promise((resolve, reject) => {\n  setTimeout(() => resolve({ url: `${uuidv4()}.png` }), 1000);\n});\n","import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { LOCATION } from \"../../constants/report\";\n\nimport { fakeImageUpload } from \"../../utils/report\";\n\nconst Upload = ({ setUpload, setStatus }) => {\n  const onDrop = async (files) => {\n    console.log(\"uploading:\", files[0]);\n    const url = await fakeImageUpload();\n    setUpload(files[0]);\n    setStatus(LOCATION);\n  }\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({getRootProps, getInputProps, isDragActive}) => {\n        return (\n          <div\n            {...getRootProps()}\n            className={`dropzone ${isDragActive ? 'dropzone--isActive' : ''}`}\n          >\n            <input {...getInputProps()} />\n            {\n              isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Try dropping some files here, or click to select files to upload.</p>\n            }\n          </div>\n        )\n      }}\n    </Dropzone>  \n  );\n};\n\nexport default Upload;\n","import React, { useState, useEffect } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\n\nimport { DETAILS } from \"../../constants/report\";\nimport { getUserLocation } from \"../../utils/report\";\n\nconst Location = ({initCenter, initZoom, setLocation, setStatus}) => {\n  const [center, setCenter] = useState(initCenter);\n  const [zoom, setZoom] = useState(initZoom);\n\n  useEffect(() => {\n    getUserLocation()\n      .then(location => {\n        const { latitude: lat, longitude: lng } = location.coords;\n        setCenter({ lat, lng });\n      })\n      .catch(() => {\n        console.warn(\"Could not get user location\");\n      });\n  }, []);\n\n  const onDrag = (event) => setCenter(event.target.getCenter());\n  const onZoom = (event) => setZoom(event.target.getZoom());\n\n  const saveLocation = () => {\n    setLocation(center);\n    setStatus(DETAILS);\n  };\n\n  return (\n    <>\n      <Map\n        center={center}\n        zoom={zoom}\n        style={{height: \"400px\"}}\n        onDrag={onDrag}\n        onZoom={onZoom}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={center}>\n          <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n      </Map>\n      <button onClick={saveLocation}>Save Location</button>\n    </>\n  );\n};\n\nexport default Location;\n","import React, { useState } from \"react\";\n\nimport { SUBMISSION } from \"../../constants/report\";\n\nconst Details = ({upload, location}) => {\n  return (\n    <>\n      <p>upload: {upload.name} ({upload.size} bytes)</p>\n      <p>location: [{location.lat}, {location.lng}]</p>\n      <p>details...</p>\n    </>\n  );\n};\n\nexport default Details;\n","import React, { useState } from \"react\";\n\nimport {\n  UPLOAD,\n  LOCATION,\n  DETAILS,\n  SUBMISSION,\n  COMPLETE,\n  coordsOakland,\n  initDetails,\n} from \"../../constants/report\";\n\nimport Upload from \"./Upload\";\nimport Location from \"./Location\";\nimport Details from \"./Details\";\n\nconst ReportObstruction = () => {\n  const [status, setStatus] = useState(UPLOAD);\n  const [upload, setUpload] = useState({});\n  const [location, setLocation] = useState(coordsOakland);\n  const [details, setDetails] = useState(initDetails);\n  const updateDetail = ([key, val]) => setDetails({ ...details, [key]: val });\n\n  const handleSubmit = () => {\n    console.log(\"submit!\")\n  }\n\n  switch(status) {\n    case UPLOAD:\n      return (\n        <Upload\n          setStatus={setStatus}\n          setUpload={setUpload}\n        />\n      );\n    case LOCATION:\n      return (\n        <Location\n          initCenter={coordsOakland}\n          initZoom={13}\n          setLocation={setLocation}\n          setStatus={setStatus}\n        />\n      );\n    case DETAILS:\n      return (\n        <Details\n          upload={upload}\n          location={location}\n        />\n      );\n    case SUBMISSION:\n      return (<p>...</p>);\n    case COMPLETE:\n      return (<p>...</p>);\n    default:\n      return null;    \n  }\n};\n\nexport default ReportObstruction;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import { Provider } from \"react-redux\";\n\n// import store from \"./redux\";\nimport PageHome from \"./components/PageHome\";\nimport Page404 from './components/Page404';\n// import ReportObstruction3 from \"./components/ReportObstruction3\";\nimport ReportObstruction from \"./components/ReportObstruction\";\n\nconst App = () => {\n  const basename = process.env.NODE_ENV === 'production' ? '/oak-bike-client' : null;\n  return (\n    <Router basename={basename}>\n      <Switch>\n        <Route exact path=\"/\" component={PageHome} />\n        <Route path=\"/report\" component={ReportObstruction} />\n        <Route path=\"/*\" component={Page404} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}