{"version":3,"sources":["components/PageHome/index.jsx","components/Page404/index.jsx","constants/report.js","components/ReportObstruction/Upload.jsx","utils/report.js","components/ReportObstruction/Location.jsx","components/ReportObstruction/Details.jsx","components/ReportObstruction/index.jsx","App.js","serviceWorker.js","index.js"],"names":["PageHome","react_default","a","createElement","Link","to","Page404","coordsOakland","lat","lng","s3Client","S3","bucketName","region","Upload","_ref","setUpload","setStatus","onDrop","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","files","file","wrap","_context","prev","next","uploadFile","then","data","console","log","catch","err","stop","this","_x","apply","arguments","es","_ref3","getRootProps","getInputProps","isDragActive","assign","className","concat","Location","initCenter","initZoom","setLocation","_useState","useState","document","documentElement","clientHeight","_useState2","slicedToArray","height","setHeight","useEffect","handleResize","window","addEventListener","removeEventListener","_useState3","_useState4","center","setCenter","options","length","undefined","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","location","error","getUserLocation","_location$coords","coords","latitude","longitude","warn","_useState5","_useState6","zoom","setZoom","Fragment","Map","onDrag","event","target","getCenter","onZoom","getZoom","style","TileLayer","attribution","url","Marker","position","Popup","onClick","Details","upload","name","size","ReportObstruction","status","ReportObstruction_Upload","ReportObstruction_Location","ReportObstruction_Details","App","BrowserRouter","basename","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","render","src_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6NAaeA,EAVE,kBACfC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,uBACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,gBCAKC,EANC,kBACdL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sECMSI,EAAgB,CAC3BC,IAAK,WACLC,KAAM,sDCAFC,EAAW,WAAIC,GAJJ,CACfC,WAAY,WACZC,OAAQ,cAoCKC,EAhCA,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,UACrBC,EAAM,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAApB,EAAAqB,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAApB,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPJ,EAAOD,EAAM,GADNG,EAAAE,KAAA,EAEPpB,EAASqB,WAAWL,GACvBM,KAAK,SAAAC,GAAUC,QAAQC,IAAI,QAASF,KACpCG,MAAM,SAAAC,GAASH,QAAQC,IAAI,OAAQE,KAJzB,OAKbH,QAAQC,IAAI,QACZnB,EAAUS,EAAM,IAChBR,EDrBoB,YCcP,wBAAAW,EAAAU,SAAAd,EAAAe,SAAH,gBAAAC,GAAA,OAAArB,EAAAsB,MAAAF,KAAAG,YAAA,GAUZ,OACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAUzB,OAAQA,GACf,SAAA0B,GAAiD,IAA/CC,EAA+CD,EAA/CC,aAAcC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,aAC9B,OACE9C,EAAAC,EAAAC,cAAA,MAAAiB,OAAA4B,OAAA,GACMH,IADN,CAEEI,UAAS,YAAAC,OAAcH,EAAe,qBAAuB,MAE7D9C,EAAAC,EAAAC,cAAA,QAAW2C,KAETC,EACE9C,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,kHCrBT,ICuDQgD,EA/DE,SAAApC,GAAoD,IAAlDqC,EAAkDrC,EAAlDqC,WAAYC,EAAsCtC,EAAtCsC,SAAUC,EAA4BvC,EAA5BuC,YAAarC,EAAeF,EAAfE,UAAesC,EAEvCC,mBAASC,SAASC,gBAAgBC,aAJxC,IAE6CC,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAAmC,EAAA,GAE5DO,EAF4DF,EAAA,GAEpDG,EAFoDH,EAAA,GAGnEI,oBAAU,WACR,IAAMC,EAAe,WACnBF,EAAUN,SAASC,gBAAgBC,aAPjB,KAWpB,OAFAO,OAAOC,iBAAiB,SAAUF,GAClCA,IACO,WACLC,OAAOE,oBAAoB,SAAUH,KAEtC,IAZgE,IAAAI,EAcvCb,mBAASJ,GAd8BkB,EAAAlD,OAAAyC,EAAA,EAAAzC,CAAAiD,EAAA,GAc5DE,EAd4DD,EAAA,GAcpDE,EAdoDF,EAAA,GAkBnEN,oBAAU,YDzBmB,eAACS,EAAD/B,UAAAgC,OAAA,QAAAC,IAAAjC,UAAA,GAAAA,UAAA,GAAW,GAAX,OAAkB,IAAIkC,QAAQ,SAACC,EAASC,GACrEC,UAAUC,YAAYC,mBACpB,SAAAC,GAAQ,OAAIL,EAAQK,IACpB,SAAAC,GAAK,OAAIL,EAAOK,IAChBV,MCsBAW,GACGpD,KAAK,SAAAkD,GAAY,IAAAG,EAC0BH,EAASI,OAAjC9E,EADF6E,EACRE,SAA0B9E,EADlB4E,EACOG,UACvBhB,EAAU,CAAEhE,MAAKC,UAElB2B,MAAM,WACLF,QAAQuD,KAAK,kCAEhB,IA3BgE,IAAAC,EA6B3ClC,mBAASH,GA7BkCsC,EAAAvE,OAAAyC,EAAA,EAAAzC,CAAAsE,EAAA,GA6B5DE,EA7B4DD,EAAA,GA6BtDE,EA7BsDF,EAAA,GAuCnE,OACE1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACE7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACExB,OAAQA,EACRqB,KAAMA,EACNI,OA7BS,SAACC,GACdzB,EAAUyB,EAAMC,OAAOC,cA6BnBC,OAfS,SAACH,GACdJ,EAAQI,EAAMC,OAAOG,YAejBC,MAAO,CAAExC,WAET7D,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAENxG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAQC,SAAUpC,GAChBtE,EAAAC,EAAAC,cAACyG,EAAA,EAAD,6BACuB3G,EAAAC,EAAAC,cAAA,WADvB,2BAKJF,EAAAC,EAAAC,cAAA,UAAQ0G,QAxBS,WACnBvD,EAAYiB,GACZtD,EH1CmB,aGgEjB,mBCpDS6F,EAVC,SAAA/F,GAAwB,IAAtBgG,EAAsBhG,EAAtBgG,OAAQ7B,EAAcnE,EAAdmE,SACxB,OACEjF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACE7F,EAAAC,EAAAC,cAAA,oBAAY4G,EAAOC,KAAnB,KAA2BD,EAAOE,KAAlC,WACAhH,EAAAC,EAAAC,cAAA,uBAAe+E,EAAS1E,IAAxB,KAA+B0E,EAASzE,IAAxC,KACAR,EAAAC,EAAAC,cAAA,yBCmDS+G,EA5CW,WAAM,IAAA3D,EACFC,mBLjBR,UKgBUI,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAAmC,EAAA,GACvB4D,EADuBvD,EAAA,GACf3C,EADe2C,EAAA,GAAAS,EAEFb,mBAAS,IAFPc,EAAAlD,OAAAyC,EAAA,EAAAzC,CAAAiD,EAAA,GAEvB0C,EAFuBzC,EAAA,GAEftD,EAFesD,EAAA,GAAAoB,EAGElC,mBAASjD,GAHXoF,EAAAvE,OAAAyC,EAAA,EAAAzC,CAAAsE,EAAA,GAGvBR,EAHuBS,EAAA,GAGbrC,EAHaqC,EAAA,GAW9B,OAAOwB,GACL,IL5BkB,SK6BhB,OACElH,EAAAC,EAAAC,cAACiH,EAAD,CACEnG,UAAWA,EACXD,UAAWA,IAGjB,ILlCoB,WKmClB,OACEf,EAAAC,EAAAC,cAACkH,EAAD,CACEjE,WAAY7C,EACZ8C,SAAU,GACVC,YAAaA,EACbrC,UAAWA,IAGjB,IL1CmB,UK2CjB,OACEhB,EAAAC,EAAAC,cAACmH,EAAD,CACEP,OAAQA,EACR7B,SAAUA,IAGhB,ILhDsB,aKkDtB,ILjDoB,WKkDlB,OAAQjF,EAAAC,EAAAC,cAAA,gBACV,QACE,OAAO,OCjCEoH,EAbH,WAEV,OACEtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAQC,SAF+C,oBAGrDxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9H,IACjCC,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWZ,IACjCjH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,KAAKC,UAAWxH,OCL9ByH,EAAcC,QACW,cAA7B9D,OAAOgB,SAAS+C,UAEe,UAA7B/D,OAAOgB,SAAS+C,UAEhB/D,OAAOgB,SAAS+C,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BtD,UAAUuD,cACPC,SAASH,GACTpG,KAAK,SAAAwG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf9D,UAAUuD,cAAcQ,YAI1B5G,QAAQC,IACN,gHAKEkG,GAAUA,EAAOU,UACnBV,EAAOU,SAASP,KAMlBtG,QAAQC,IAAI,sCAGRkG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUR,UAO5BpG,MAAM,SAAA+C,GACLjD,QAAQiD,MAAM,4CAA6CA,KC1FjE8D,iBACEhJ,EAAAC,EAAAC,cAAC+I,EAAD,MACAzF,SAAS0F,eAAe,SDcnB,SAAkBd,GACvB,GAA6C,kBAAmBtD,UAAW,CAGzE,GADkB,IAAIqE,IAAIC,mBAAwBnF,OAAOgB,SAASoE,MACpDC,SAAWrF,OAAOgB,SAASqE,OAIvC,OAGFrF,OAAOC,iBAAiB,OAAQ,WAC9B,IAAMiE,EAAK,GAAAlF,OAAMmG,mBAAN,sBAEPtB,GAgEV,SAAiCK,EAAOC,GAEtCmB,MAAMpB,GACHpG,KAAK,SAAAyH,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAAStC,QACO,MAAfuC,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9E,UAAUuD,cAAcwB,MAAM9H,KAAK,SAAAwG,GACjCA,EAAauB,aAAa/H,KAAK,WAC7BkC,OAAOgB,SAAS8E,aAKpB7B,EAAgBC,EAAOC,KAG1BjG,MAAM,WACLF,QAAQC,IACN,mEArFA8H,CAAwB7B,EAAOC,GAI/BtD,UAAUuD,cAAcwB,MAAM9H,KAAK,WACjCE,QAAQC,IACN,+GAMJgG,EAAgBC,EAAOC,MCpC/BC","file":"static/js/main.00cb26e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nconst PageHome = () => (\n  <div>\n    <h1>Home Page</h1>\n    <ul>\n      <li><Link to=\"/report\">Report Obstruction</Link></li>\n      <li><Link to=\"/nopers\">Bad Link</Link></li>\n    </ul>\n  </div>\n);\n\nexport default PageHome;\n","import React from \"react\";\n\nconst Page404 = () => (\n  <div>\n    <p>gosh darn we got us a 404 page not heckin found</p>\n  </div>\n);\n\nexport default Page404;\n","export const UPLOAD = \"UPLOAD\";\nexport const LOCATION = \"LOCATION\";\nexport const DETAILS = \"DETAILS\";\nexport const SUBMISSION = \"SUBMISSION\";\nexport const COMPLETE = \"COMPLETE\";\n\nexport const USE_MY_LOCATION = \"USE_MY_LOCATION\";\nexport const DROP_PIN_ON_MAP = \"DROP_PIN_ON_MAP\";\nexport const ENTER_ADDRESS = \"ENTER_ADDRESS\";\n\nexport const coordsOakland = {\n  lat: 37.8131418,\n  lng: -122.2662702\n};\n\nexport const initDetails = {\n  name: '',\n  contact: '',\n  notes: '',\n};\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { LOCATION } from \"../../constants/report\";\n\n// import { fakeImageUpload } from \"../../utils/report\";\n\n// import s3 from \"aws-sdk/clients/s3\";\nimport S3 from \"aws-s3\";\nconst s3Config = {\n  bucketName: \"oak-bike\",\n  region: \"us-west-1\",\n};\nconst s3Client = new S3(s3Config);\n\nconst Upload = ({ setUpload, setStatus }) => {\n  const onDrop = async (files) => {\n    const file = files[0];\n    await s3Client.uploadFile(file)\n      .then(data => { console.log(\"data:\", data); })\n      .catch(err => { console.log(\"err:\", err); });\n    console.log(\"this\");\n    setUpload(files[0]);\n    setStatus(LOCATION);\n  }\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({getRootProps, getInputProps, isDragActive}) => {\n        return (\n          <div\n            {...getRootProps()}\n            className={`dropzone ${isDragActive ? 'dropzone--isActive' : ''}`}\n          >\n            <input {...getInputProps()} />\n            {\n              isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Try dropping some files here, or click to select files to upload.</p>\n            }\n          </div>\n        )\n      }}\n    </Dropzone>  \n  );\n};\n\nexport default Upload;\n","\nexport const getUserLocation = (options = {}) => new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(\n    location => resolve(location),\n    error => reject(error),\n    options,\n  );\n});\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport const fakeImageUpload = file => new Promise((resolve, reject) => {\n  setTimeout(() => resolve({ url: `${uuidv4()}.png` }), 1000);\n});\n","import React, { useState, useEffect } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\n\nimport { DETAILS } from \"../../constants/report\";\nimport { getUserLocation } from \"../../utils/report\";\n\nconst mapBottomOffset = 60;\n\nconst Location = ({initCenter, initZoom, setLocation, setStatus}) => {\n  // <Map> requires an absolute height\n  const [height, setHeight] = useState(document.documentElement.clientHeight - mapBottomOffset);\n  useEffect(() => {\n    const handleResize = () => {\n      setHeight(document.documentElement.clientHeight - mapBottomOffset);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []);\n\n  const [center, setCenter] = useState(initCenter);\n  const onDrag = (event) => {\n    setCenter(event.target.getCenter());\n  }\n  useEffect(() => {\n    getUserLocation()\n      .then(location => {\n        const { latitude: lat, longitude: lng } = location.coords;\n        setCenter({ lat, lng });\n      })\n      .catch(() => {\n        console.warn(\"Could not get user location\");\n      });\n  }, []);\n\n  const [zoom, setZoom] = useState(initZoom);\n  const onZoom = (event) => {\n    setZoom(event.target.getZoom());\n  }\n\n  const saveLocation = () => {\n    setLocation(center);\n    setStatus(DETAILS);\n  };\n\n  return (\n    <>\n      <Map\n        center={center}\n        zoom={zoom}\n        onDrag={onDrag}\n        onZoom={onZoom}\n        style={{ height }}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={center}>\n          <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n      </Map>\n      <button onClick={saveLocation}>Save Location</button>\n    </>\n  );\n};\n\nexport default Location;\n","import React from \"react\";\n\n// import { SUBMISSION } from \"../../constants/report\";\n\nconst Details = ({upload, location}) => {\n  return (\n    <>\n      <p>upload: {upload.name} ({upload.size} bytes)</p>\n      <p>location: [{location.lat}, {location.lng}]</p>\n      <p>details...</p>\n    </>\n  );\n};\n\nexport default Details;\n","import React, { useState } from \"react\";\n\nimport {\n  UPLOAD,\n  LOCATION,\n  DETAILS,\n  SUBMISSION,\n  COMPLETE,\n  coordsOakland,\n  // initDetails,\n} from \"../../constants/report\";\n\nimport Upload from \"./Upload\";\nimport Location from \"./Location\";\nimport Details from \"./Details\";\n\nconst ReportObstruction = () => {\n  const [status, setStatus] = useState(UPLOAD);\n  const [upload, setUpload] = useState({});\n  const [location, setLocation] = useState(coordsOakland);\n  // const [details, setDetails] = useState(initDetails);\n  // const updateDetail = ([key, val]) => setDetails({ ...details, [key]: val });\n\n  // const handleSubmit = () => {\n  //   console.log(\"submit!\")\n  // }\n\n  switch(status) {\n    case UPLOAD:\n      return (\n        <Upload\n          setStatus={setStatus}\n          setUpload={setUpload}\n        />\n      );\n    case LOCATION:\n      return (\n        <Location\n          initCenter={coordsOakland}\n          initZoom={14}\n          setLocation={setLocation}\n          setStatus={setStatus}\n        />\n      );\n    case DETAILS:\n      return (\n        <Details\n          upload={upload}\n          location={location}\n        />\n      );\n    case SUBMISSION:\n      return (<p>...</p>);\n    case COMPLETE:\n      return (<p>...</p>);\n    default:\n      return null;    \n  }\n};\n\nexport default ReportObstruction;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import { Provider } from \"react-redux\";\n\n// import store from \"./redux\";\nimport PageHome from \"./components/PageHome\";\nimport Page404 from './components/Page404';\n// import ReportObstruction3 from \"./components/ReportObstruction3\";\nimport ReportObstruction from \"./components/ReportObstruction\";\n\nconst App = () => {\n  const basename = process.env.NODE_ENV === 'production' ? '/oak-bike-client' : null;\n  return (\n    <Router basename={basename}>\n      <Switch>\n        <Route exact path=\"/\" component={PageHome} />\n        <Route path=\"/report\" component={ReportObstruction} />\n        <Route path=\"/*\" component={Page404} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}