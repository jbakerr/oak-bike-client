{"version":3,"sources":["constants/report.js","constants/actionsNames.js","redux/report/reducers.js","redux/report/selectors.js","redux/report/actions.js","redux/report/effects.js","redux/report/sagas.js","redux/index.js","components/PageHome/index.jsx","components/Page404/index.jsx","components/ReportObstruction/image.jsx","components/ReportObstruction/location.jsx","components/ReportObstruction/details.jsx","components/ReportObstruction/index.jsx","App.js","serviceWorker.js","index.js"],"names":["LOCATION","DETAILS","USE_MY_LOCATION","GET_LOCATION_COORDS","HANDLE_REPORT_IMAGE_UPLOAD","initialState","status","image","location","shared","fetching","coords","lat","lng","method","details","name","phone","email","notes","time","state","arguments","length","undefined","action","type","payload","Object","objectSpread","defineProperty","key","value","reportReducer","reportState","report","selectReportStatus","createSelector","selectReportImage","selectReportLocationCoords","selectReportLocationMethod","selectReportDetails","setReportStatus","setReportImage","setReportLocationShared","setReportLocationFetching","setReportLocationCoords","getUserLocation","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","error","fakeImageUpload","file","setTimeout","url","concat","Date","now","getLocationCoords","handleImageUpload","reportSagas","position","regenerator_default","a","wrap","_context","prev","next","put","call","sent","latitude","longitude","select","t0","console","message","stop","_marked","this","upload","_context2","_marked2","_context3","takeLatest","_marked3","sagaMiddleWare","createSagaMiddleware","reducers","combineReducers","store","createStore","applyMiddleware","run","PageHome","react_default","createElement","Link","to","Page404","ReportImage","connect","dispatch","uploadImage","handleReportImageUpload","props","dist_es","onDrop","files","_ref","getRootProps","getInputProps","isDragActive","assign","className","ReportLocation","setMethod","setReportLocationMethod","getCoords","onClick","ReportDetails","setDetail","k","v","ReportObstruction","ReportObstruction_image","ReportObstruction_location","ReportObstruction_details","App","es","BrowserRouter","basename","Switch","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6PACaA,EAAW,WACXC,EAAU,UAGVC,EAAkB,kBCGlBC,EAAsB,sBACtBC,EAA6B,6BCKpCC,EAAe,CACnBC,OFfmB,QEgBnBC,MAAO,GACPC,SAAU,CACRC,QAAQ,EACRC,UAAU,EACVC,OAAQ,CACNC,IAAK,KACLC,IAAK,MAEPC,OAAQ,MAEVC,QAAS,CACPC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,OAQJd,EAAS,WAAyC,IAAxCe,EAAwCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCjB,EAAaC,OAAQmB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQC,EAAOC,MACb,IDzC6B,oBC0C3B,OAAOD,EAAOE,QAChB,QACE,OAAON,IAIPd,EAAQ,WAAwC,IAAvCc,EAAuCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BjB,EAAaE,MAAOkB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,IDjD4B,mBCkD1B,OAAOD,EAAOE,QAChB,QACE,OAAON,IAIPb,EAAW,WAA2C,IAA1Ca,EAA0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlCjB,EAAaG,SAAUiB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAOC,EAAOC,MACZ,IDzDsC,6BC0DpC,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEb,SAAUiB,EAAOE,UAErB,ID7DwC,+BC8DtC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEX,SAAUe,EAAOE,UAErB,IDjEsC,6BCkEpC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEV,OAAQc,EAAOE,UAEnB,IDrEsC,6BCsEpC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEP,OAAQW,EAAOE,UAEnB,QACE,OAAON,IAIPN,EAAU,WAA0C,IAAzCM,EAAyCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCjB,EAAaU,QAASU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAOC,EAAOC,MACZ,IDhF6B,oBCiF3B,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADLO,OAAAE,EAAA,EAAAF,CAAA,GAEGH,EAAOE,QAAQI,IAAMN,EAAOE,QAAQK,QAEzC,QACE,OAAOX,IAaEY,EATO,WAAkC,IAAjCZ,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBjB,EAAcoB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,MAAO,CACLlB,OAAQA,EAAOe,EAAMf,OAAQmB,GAC7BlB,MAAOA,EAAMc,EAAMd,MAAOkB,GAC1BjB,SAAUA,EAASa,EAAMb,SAAUiB,GACnCV,QAASA,EAAQM,EAAMN,QAASU,sCCnGvBS,EAAc,SAAAb,GAAK,OAAIA,EAAMc,QAAU,IAEvCC,EAAqBC,YAChCH,EACA,SAAAC,GAAM,OAAIA,EAAO7B,SAGNgC,EAAoBD,YAC/BH,EACA,SAAAC,GAAM,OAAIA,EAAO5B,QAaNgC,GAV6BF,YACxCH,EACA,SAAAC,GAAM,OAAIA,EAAO3B,SAASC,SAGgB4B,YAC1CH,EACA,SAAAC,GAAM,OAAIA,EAAO3B,SAASE,WAGc2B,YACxCH,EACA,SAAAC,GAAM,OAAIA,EAAO3B,SAASG,UAGf6B,EAA6BH,YACxCH,EACA,SAAAC,GAAM,OAAIA,EAAO3B,SAASM,SAGf2B,EAAsBJ,YACjCH,EACA,SAAAC,GAAM,OAAIA,EAAOpB,UCxBN2B,EAAkB,SAACpC,GAAD,MAAa,CAC1CoB,KHb+B,oBGc/BC,QAASrB,IAGEqC,EAAiB,SAACpC,GAAD,MAAY,CACxCmB,KHjB8B,mBGkB9BC,QAASpB,IAGEqC,EAA0B,SAACnC,GAAD,MAAa,CAClDiB,KHrBwC,6BGsBxCC,QAASlB,IAGEoC,EAA4B,SAACnC,GAAD,MAAe,CACtDgB,KHzB0C,+BG0B1CC,QAASjB,IAGEoC,EAA0B,SAACnC,GAAD,MAAa,CAClDe,KH7BwC,6BG8BxCC,QAAShB,ICjCEoC,EAAkB,eAACC,EAAD1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAW,GAAX,OAAkB,IAAI2B,QAAQ,SAACC,EAASC,GACrEC,UAAUC,YAAYC,mBACpB,SAAA9C,GAAQ,OAAI0C,EAAQ1C,IACpB,SAAA+C,GAAK,OAAIJ,EAAOI,IAChBP,MAISQ,EAAkB,SAAAC,GAAI,OAAI,IAAIR,QAAQ,SAACC,EAASC,GAC3DO,WAAW,kBAAMR,EAAQ,CAAES,IAAG,GAAAC,OAAKC,KAAKC,UAAY,mBCkB5CC,cAsBAC,cAUAC,GAhCV,SAAUF,IAAV,IAAAG,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQC,YAAI5B,GAA0B,IADtC,OAIqB,OAJrByB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI2BE,YAAK3B,GAJhC,OAKI,OADMmB,EAJVI,EAAAK,KAAAL,EAAAE,KAAA,EAKUC,YAAI3B,EAAwB,CAChClC,IAAKsD,EAASvD,OAAOiE,SACrB/D,IAAKqD,EAASvD,OAAOkE,aAP3B,OASI,OATJP,EAAAE,KAAA,GASUC,YAAI7B,GAAwB,IATtC,QAWmB,OAXnB0B,EAAAE,KAAA,GAWyBM,YAAOtC,GAXhC,WAAA8B,EAAAK,OAYmBzE,EAZnB,CAAAoE,EAAAE,KAAA,SAaM,OAbNF,EAAAE,KAAA,GAaYC,YAAI/B,EAAgBzC,IAbhC,QAAAqE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAgBIU,QAAQzB,MAAR,UAAAK,OAAwBU,EAAAS,GAAME,UAhBlC,QAmBE,OAnBFX,EAAAE,KAAA,GAmBQC,YAAI5B,GAA0B,IAnBtC,yBAAAyB,EAAAY,SAAAC,EAAAC,KAAA,UAsBA,SAAUpB,EAAkBzD,GAA5B,IAAA8E,EAAA,OAAAlB,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAEmB,OAFnBc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAEyBE,YAAKlB,EAAiBjD,GAF/C,OAGI,OADM8E,EAFVC,EAAAX,KAAAW,EAAAd,KAAA,EAGUC,YAAI9B,EAAe0C,IAH7B,OAII,OAJJC,EAAAd,KAAA,EAIUC,YAAI/B,EAAgB1C,IAJ9B,OAAAsF,EAAAd,KAAA,iBAAAc,EAAAf,KAAA,GAAAe,EAAAP,GAAAO,EAAA,SAMIN,QAAQzB,MAAR,UAAAK,OAAwB0B,EAAAP,GAAME,UANlC,yBAAAK,EAAAJ,SAAAK,EAAAH,KAAA,UAUA,SAAUnB,IAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACE,OADFgB,EAAAhB,KAAA,EACQiB,YAAWtF,EAAqB4D,GADxC,OAEE,OAFFyB,EAAAhB,KAAA,EAEQiB,YAAWrF,EAA4B4D,GAF/C,wBAAAwB,EAAAN,SAAAQ,EAAAN,MAKenB,QC3DT0B,EAAiBC,cAEjBC,EAAWC,YAAgB,CAC/B3D,OAAQF,IAGJ8D,EAAQC,YACZH,EACAI,YAAgBN,IAGlBA,EAAeO,IAAIjC,GAEJ8B,gBCNAI,GAVE,kBACfC,EAAAhC,EAAAiC,cAAA,WACED,EAAAhC,EAAAiC,cAAA,uBACAD,EAAAhC,EAAAiC,cAAA,UACED,EAAAhC,EAAAiC,cAAA,UAAID,EAAAhC,EAAAiC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,uBACJH,EAAAhC,EAAAiC,cAAA,UAAID,EAAAhC,EAAAiC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,gBCAKC,GANC,kBACdJ,EAAAhC,EAAAiC,cAAA,WACED,EAAAhC,EAAAiC,cAAA,uECmCWI,GAFKC,YAAQ,KA7BD,SAACC,GAAD,MAAe,CACxCC,YAAa,SAACrG,GAAD,OAAWoG,EN6Ca,SAACpG,GAAD,MAAY,CACjDmB,KAAMtB,EACNuB,QAASpB,GM/CwBsG,CAAwBtG,OA4BvCmG,CAzBE,SAACI,GAIrB,OACEV,EAAAhC,EAAAiC,cAACU,GAAA,EAAD,CAAUC,OAHG,SAAAC,GAAK,OAAIH,EAAMF,YAAYK,EAAM,MAI3C,SAAAC,GAAiD,IAA/CC,EAA+CD,EAA/CC,aAAcC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,aAC9B,OACEjB,EAAAhC,EAAAiC,cAAA,MAAAzE,OAAA0F,OAAA,GACMH,IADN,CAEEI,UAAS,YAAA3D,OAAcyD,EAAe,qBAAuB,MAE7DjB,EAAAhC,EAAAiC,cAAA,QAAWe,KAETC,EACEjB,EAAAhC,EAAAiC,cAAA,+BACAD,EAAAhC,EAAAiC,cAAA,mFCoCDmB,GAFQd,YA5CC,SAACrF,GAAD,MAAY,CAClCP,OAAQ0B,EAA2BnB,KAGV,SAACsF,GAAD,MAAe,CACxCc,UAAW,SAAC3G,GAAD,OAAY6F,EPcc,SAAC7F,GAAD,MAAa,CAClDY,KHjCwC,6BGkCxCC,QAASb,GOhBuB4G,CAAwB5G,KACxD6G,UAAW,kBAAMhB,EP0B2B,CAC5CjF,KAAMvB,OOWeuG,CAnCE,SAACI,GAAU,IAEhChG,EAGEgG,EAHFhG,OACA2G,EAEEX,EAFFW,UACAE,EACEb,EADFa,UAiBF,OAAO7G,GACL,KAAKZ,EAAiB,OAAOkG,EAAAhC,EAAAiC,cAAA,iCAC7B,IX5C2B,kBW4CL,OAAOD,EAAAhC,EAAAiC,cAAA,uBAC7B,IX5CyB,gBW4CL,OAAOD,EAAAhC,EAAAiC,cAAA,6BAC3B,QAAS,OACPD,EAAAhC,EAAAiC,cAAA,WACED,EAAAhC,EAAAiC,cAAA,UAAQuB,QApBQ,WACpBH,EAAUvH,GACVyH,MAkBI,mBACAvB,EAAAhC,EAAAiC,cAAA,UAAQuB,QAhBO,WACnBH,EXlC2B,mBWmC3BE,MAcI,mBACAvB,EAAAhC,EAAAiC,cAAA,UAAQuB,QAZO,WACnBH,EXtCyB,mBWiDrB,qBCdOI,GAFOnB,YA3BE,SAACrF,GAAD,MAAY,CAClCd,MAAO+B,EAAkBjB,GACzBV,OAAQ4B,EAA2BlB,GACnCN,QAAS0B,EAAoBpB,KAGJ,SAACsF,GAAD,MAAe,CACxCmB,UAAW,SAACC,EAAEC,GAAH,OAASrB,ERsB0B,CAC9CjF,KHrC+B,oBGsC/BC,QAAS,CACPI,IQzB2CgG,ER0B3C/F,MQ1B6CgG,QAoB3BtB,CAjBE,SAACI,GAAU,IAE/BvG,EAIEuG,EAJFvG,MACAI,EAGEmG,EAHFnG,OAGEmG,EAFF/F,QAEE+F,EADFgB,UAGF,OACE1B,EAAAhC,EAAAiC,cAAA,WACED,EAAAhC,EAAAiC,cAAA,uBAAe9F,EAAMoD,KACrByC,EAAAhC,EAAAiC,cAAA,qBAAa1F,EAAOC,IAApB,KAA2BD,EAAOE,IAAlC,KACAuF,EAAAhC,EAAAiC,cAAA,+BCHS4B,GAFWvB,YAfF,SAACrF,GAAD,MAAY,CAClCf,OAAQ8B,EAAmBf,KAcsB,KAAzBqF,CAXE,SAACI,GAG3B,OAFmBA,EAAXxG,QAGN,IbvBiB,QauBL,OAAO8F,EAAAhC,EAAAiC,cAAC6B,GAAD,MACnB,KAAKlI,EAAU,OAAOoG,EAAAhC,EAAAiC,cAAC8B,GAAD,MACtB,KAAKlI,EAAS,OAAOmG,EAAAhC,EAAAiC,cAAC+B,GAAD,MACrB,QAAS,OAAOhC,EAAAhC,EAAAiC,cAAA,mBCFLgC,GAfH,WAEV,OACEjC,EAAAhC,EAAAiC,cAACiC,EAAA,EAAD,CAAUvC,MAAOA,GACfK,EAAAhC,EAAAiC,cAACkC,EAAA,EAAD,CAAQC,SAH6C,oBAInDpC,EAAAhC,EAAAiC,cAACoC,EAAA,EAAD,KACErC,EAAAhC,EAAAiC,cAACqC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1C,KACjCC,EAAAhC,EAAAiC,cAACqC,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWZ,KACjC7B,EAAAhC,EAAAiC,cAACqC,EAAA,EAAD,CAAOE,KAAK,KAAKC,UAAWrC,SCLhCsC,GAAcC,QACW,cAA7BC,OAAOxI,SAASyI,UAEe,UAA7BD,OAAOxI,SAASyI,UAEhBD,OAAOxI,SAASyI,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BjG,UAAUkG,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtI,QACf+B,UAAUkG,cAAcQ,YAI1B9E,QAAQ+E,IACN,gHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlBzE,QAAQ+E,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,UAO5BS,MAAM,SAAA3G,GACLyB,QAAQzB,MAAM,4CAA6CA,KC1FjE4G,iBACE/D,EAAAhC,EAAAiC,cAAC+D,GAAD,MACAC,SAASC,eAAe,SDcnB,SAAkBjB,GACvB,GAA6C,kBAAmBjG,UAAW,CAGzE,GADkB,IAAImH,IAAIC,mBAAwBxB,OAAOxI,SAASiK,MACpDC,SAAW1B,OAAOxI,SAASkK,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAxF,OAAM4G,mBAAN,sBAEP1B,IAgEV,SAAiCM,EAAOC,GAEtCuB,MAAMxB,GACHI,KAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASvK,QACO,MAAfwK,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7H,UAAUkG,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BR,OAAOxI,SAAS4K,aAKpBjC,GAAgBC,EAAOC,KAG1Ba,MAAM,WACLlF,QAAQ+E,IACN,mEArFAsB,CAAwBjC,EAAOC,GAI/BjG,UAAUkG,cAAc4B,MAAM1B,KAAK,WACjCxE,QAAQ+E,IACN,+GAMJZ,GAAgBC,EAAOC,MCpC/BC","file":"static/js/main.15379a77.chunk.js","sourcesContent":["export const IMAGE = \"IMAGE\";\nexport const LOCATION = \"LOCATION\";\nexport const DETAILS = \"DETAILS\";\nexport const SUBMISSION = \"SUBMISSION\";\n\nexport const USE_MY_LOCATION = \"USE_MY_LOCATION\";\nexport const DROP_PIN_ON_MAP = \"DROP_PIN_ON_MAP\";\nexport const ENTER_ADDRESS = \"ENTER_ADDRESS\";\n\n","export const SET_REPORT_STATUS = \"SET_REPORT_STATUS\";\nexport const SET_REPORT_IMAGE = \"SET_REPORT_IMAGE\";\nexport const SET_REPORT_LOCATION_SHARED = \"SET_REPORT_LOCATION_SHARED\";\nexport const SET_REPORT_LOCATION_FETCHING = \"SET_REPORT_LOCATION_FETCHING\";\nexport const SET_REPORT_LOCATION_COORDS = \"SET_REPORT_LOCATION_COORDS\";\nexport const SET_REPORT_LOCATION_METHOD = \"SET_REPORT_LOCATION_METHOD\";\nexport const SET_REPORT_DETAIL = \"SET_REPORT_DETAIL\";\n\nexport const GET_LOCATION_COORDS = \"GET_LOCATION_COORDS\";\nexport const HANDLE_REPORT_IMAGE_UPLOAD = \"HANDLE_REPORT_IMAGE_UPLOAD\";\n","import {\n  IMAGE,\n} from \"../../constants/report\"\n\nimport {\n  SET_REPORT_STATUS,\n  SET_REPORT_IMAGE,\n  SET_REPORT_LOCATION_SHARED,\n  SET_REPORT_LOCATION_FETCHING,\n  SET_REPORT_LOCATION_COORDS,\n  SET_REPORT_LOCATION_METHOD,\n  SET_REPORT_DETAIL,\n} from \"../../constants/actionsNames\";\n\nconst initialState = {\n  status: IMAGE,\n  image: {},\n  location: {\n    shared: false,\n    fetching: false,\n    coords: {\n      lat: null,\n      lng: null,\n    },\n    method: null,\n  },\n  details: {\n    name: '',\n    phone: '',\n    email: '',\n    notes: '',\n    time: null,\n  },\n  // submission: {\n  //   status: null,\n  //   error: null,\n  // },\n};\n\nconst status = (state = initialState.status, action) => {\n  switch (action.type) {\n    case SET_REPORT_STATUS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst image = (state = initialState.image, action) => {\n  switch (action.type) {\n    case SET_REPORT_IMAGE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst location = (state = initialState.location, action) => {\n  switch(action.type) {\n    case SET_REPORT_LOCATION_SHARED:\n      return {\n        ...state,\n        location: action.payload,\n      };\n    case SET_REPORT_LOCATION_FETCHING:\n      return {\n        ...state,\n        fetching: action.payload,\n      };\n    case SET_REPORT_LOCATION_COORDS:\n      return {\n        ...state,\n        coords: action.payload,\n      };\n    case SET_REPORT_LOCATION_METHOD:\n      return {\n        ...state,\n        method: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nconst details = (state = initialState.details, action) => {\n  switch(action.type) {\n    case SET_REPORT_DETAIL:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    default:\n      return state;\n  }\n}\n\nconst reportReducer = (state = initialState, action) => {\n  return {\n    status: status(state.status, action),\n    image: image(state.image, action),\n    location: location(state.location, action),\n    details: details(state.details, action),\n  }\n};\n\nexport default reportReducer;\n","import { createSelector } from \"reselect\";\n\nexport const reportState = state => state.report || {};\n\nexport const selectReportStatus = createSelector(\n  reportState,\n  report => report.status,\n);\n\nexport const selectReportImage = createSelector(\n  reportState,\n  report => report.image,\n);\n\nexport const selectReportLocationShared = createSelector(\n  reportState,\n  report => report.location.shared,\n);\n\nexport const selectReportLocationFetching = createSelector(\n  reportState,\n  report => report.location.fetching,\n);\n\nexport const selectReportLocationCoords = createSelector(\n  reportState,\n  report => report.location.coords,\n);\n\nexport const selectReportLocationMethod = createSelector(\n  reportState,\n  report => report.location.method,\n);\n\nexport const selectReportDetails = createSelector(\n  reportState,\n  report => report.details,\n);\n","import {\n  SET_REPORT_STATUS,\n  SET_REPORT_IMAGE,\n  SET_REPORT_LOCATION_SHARED,\n  SET_REPORT_LOCATION_FETCHING,\n  SET_REPORT_LOCATION_COORDS,\n  SET_REPORT_LOCATION_METHOD,\n  SET_REPORT_DETAIL,\n  GET_LOCATION_COORDS,\n  HANDLE_REPORT_IMAGE_UPLOAD,\n} from \"../../constants/actionsNames\";\n\nexport const setReportStatus = (status) => ({\n  type: SET_REPORT_STATUS,\n  payload: status,\n});\n\nexport const setReportImage = (image) => ({\n  type: SET_REPORT_IMAGE,\n  payload: image,\n});\n\nexport const setReportLocationShared = (shared) => ({\n  type: SET_REPORT_LOCATION_SHARED,\n  payload: shared,\n});\n\nexport const setReportLocationFetching = (fetching) => ({\n  type: SET_REPORT_LOCATION_FETCHING,\n  payload: fetching,\n});\n\nexport const setReportLocationCoords = (coords) => ({\n  type: SET_REPORT_LOCATION_COORDS,\n  payload: coords,\n});\n\nexport const setReportLocationMethod = (method) => ({\n  type: SET_REPORT_LOCATION_METHOD,\n  payload: method,\n});\n\nexport const setReportDetail = (key, value) => ({\n  type: SET_REPORT_DETAIL,\n  payload: {\n    key,\n    value,\n  },\n});\n\nexport const getReportLocationCoords = () => ({\n  type: GET_LOCATION_COORDS,\n});\n\nexport const handleReportImageUpload = (image) => ({\n  type: HANDLE_REPORT_IMAGE_UPLOAD,\n  payload: image,\n});\n","\nexport const getUserLocation = (options = {}) => new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(\n    location => resolve(location),\n    error => reject(error),\n    options,\n  );\n});\n\nexport const fakeImageUpload = file => new Promise((resolve, reject) => {\n  setTimeout(() => resolve({ url: `${Date.now()}` }), 2000);\n});\n","import { put, call, select, takeLatest } from \"redux-saga/effects\";\n\nimport {\n  LOCATION,\n  DETAILS,\n  USE_MY_LOCATION,\n} from \"../../constants/report\";\n\nimport {\n  GET_LOCATION_COORDS,\n  HANDLE_REPORT_IMAGE_UPLOAD,\n} from \"../../constants/actionsNames\";\n\nimport { selectReportLocationMethod } from \"./selectors\";\n\nimport {\n  setReportImage,\n  setReportStatus,\n  setReportLocationShared,\n  setReportLocationFetching,\n  setReportLocationCoords,\n} from \"./actions\";\n\nimport {\n  getUserLocation,\n  fakeImageUpload,\n} from \"./effects\";\n\nfunction* getLocationCoords() {\n  yield put(setReportLocationFetching(true));\n\n  try {\n    const position = yield call(getUserLocation);\n    yield put(setReportLocationCoords({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    }));\n    yield put(setReportLocationShared(true));\n\n    const method = yield select(selectReportLocationMethod);\n    if (method === USE_MY_LOCATION) {\n      yield put(setReportStatus(DETAILS));\n    }\n  } catch (error) {\n    console.error(`ERROR: ${error.message}`)\n  }\n\n  yield put(setReportLocationFetching(false));\n}\n\nfunction* handleImageUpload(image) {\n  try {\n    const upload = yield call(fakeImageUpload, image);\n    yield put(setReportImage(upload));\n    yield put(setReportStatus(LOCATION));\n  } catch (error) {\n    console.error(`ERROR: ${error.message}`)\n  }\n}\n\nfunction* reportSagas() {\n  yield takeLatest(GET_LOCATION_COORDS, getLocationCoords);\n  yield takeLatest(HANDLE_REPORT_IMAGE_UPLOAD, handleImageUpload);\n}\n\nexport default reportSagas;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reportReducer from \"./report/reducers\";\nimport reportSagas from \"./report/sagas\";\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst reducers = combineReducers({\n  report: reportReducer,\n});\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(sagaMiddleWare),\n);\n\nsagaMiddleWare.run(reportSagas);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nconst PageHome = () => (\n  <div>\n    <h1>Home Page</h1>\n    <ul>\n      <li><Link to=\"/report\">Report Obstruction</Link></li>\n      <li><Link to=\"/nopers\">Bad Link</Link></li>\n    </ul>\n  </div>\n);\n\nexport default PageHome;\n","import React from \"react\";\n\nconst Page404 = () => (\n  <div>\n    <p>gosh darn we got us a 404 page not heckin found</p>\n  </div>\n);\n\nexport default Page404;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropzone from \"react-dropzone\";\n\nimport {\n  handleReportImageUpload,\n} from \"../../redux/report/actions\";\n\nconst mapDispatchToProps = (dispatch) => ({\n  uploadImage: (image) => dispatch(handleReportImageUpload(image)),\n});\n\nconst ReportImageUI = (props) => {\n\n  const onDrop = files => props.uploadImage(files[0]);\n\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({getRootProps, getInputProps, isDragActive}) => {\n        return (\n          <div\n            {...getRootProps()}\n            className={`dropzone ${isDragActive ? 'dropzone--isActive' : ''}`}\n          >\n            <input {...getInputProps()} />\n            {\n              isDragActive ?\n                <p>Drop files here...</p> :\n                <p>Try dropping some files here, or click to select files to upload.</p>\n            }\n          </div>\n        )\n      }}\n    </Dropzone>\n  );\n};\n\nconst ReportImage = connect(null, mapDispatchToProps)(ReportImageUI);\n\nexport default ReportImage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  USE_MY_LOCATION,\n  DROP_PIN_ON_MAP,\n  ENTER_ADDRESS,\n} from \"../../constants/report\";\n\nimport {\n  selectReportLocationMethod,\n} from \"../../redux/report/selectors\";\n\nimport {\n  setReportLocationMethod,\n  getReportLocationCoords,\n} from \"../../redux/report/actions\";\n\nconst mapStateToProps = (state) => ({\n  method: selectReportLocationMethod(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setMethod: (method) => dispatch(setReportLocationMethod(method)),\n  getCoords: () => dispatch(getReportLocationCoords()),\n});\n\nconst ReportLocationUI = (props) => {\n  const {\n    method,\n    setMethod,\n    getCoords,\n  } = props;\n\n  const useMyLocation = () => {\n    setMethod(USE_MY_LOCATION);\n    getCoords();\n  }\n\n  const dropPinOnMap = () => {\n    setMethod(DROP_PIN_ON_MAP);\n    getCoords();\n  }\n\n  const enterAddress = () => {\n    setMethod(ENTER_ADDRESS);\n  }\n\n  switch(method) {\n    case USE_MY_LOCATION: return <p>fetching location...</p>;\n    case DROP_PIN_ON_MAP: return <p>muh map...</p>;\n    case ENTER_ADDRESS: return <p>enter address...</p>;\n    default: return (\n      <div>\n        <button onClick={useMyLocation}>Use My Location</button>\n        <button onClick={dropPinOnMap}>Drop Pin on Map</button>\n        <button onClick={enterAddress}>Enter Address</button>\n      </div>\n    );\n  }\n};\n\nconst ReportLocation = connect(mapStateToProps, mapDispatchToProps)(ReportLocationUI);\n\nexport default ReportLocation;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  selectReportImage,\n  selectReportLocationCoords,\n  selectReportDetails,\n} from \"../../redux/report/selectors\";\n\nimport {\n  setReportDetail,\n} from \"../../redux/report/actions\";\n\nconst mapStateToProps = (state) => ({\n  image: selectReportImage(state),\n  coords: selectReportLocationCoords(state),\n  details: selectReportDetails(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setDetail: (k,v) => dispatch(setReportDetail(k,v)),\n});\n\nconst ReportDetailsUI = (props) => {\n  const {\n    image,\n    coords,\n    details,\n    setDetail,\n  } = props;\n\n  return (\n    <div>\n      <p>image url: {image.url}</p>\n      <p>coords: [{coords.lat}, {coords.lng}]</p>\n      <p>more details...</p>\n    </div>\n  );\n};\n\nconst ReportDetails = connect(mapStateToProps, mapDispatchToProps)(ReportDetailsUI);\n\nexport default ReportDetails;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  IMAGE,\n  LOCATION,\n  DETAILS,\n} from \"../../constants/report\"\n\nimport { selectReportStatus } from \"../../redux/report/selectors\";\n\nimport ReportImage from \"./image\";\nimport ReportLocation from \"./location\";\nimport ReportDetails from \"./details\"\n\nconst mapStateToProps = (state) => ({\n  status: selectReportStatus(state),\n});\n\nconst ReportObstructionUI = (props) => {\n  const { status } = props;\n\n  switch (status) {\n    case IMAGE: return <ReportImage/>;\n    case LOCATION: return <ReportLocation/>;\n    case DETAILS: return <ReportDetails/>;\n    default: return <p>wat</p>;\n  }\n};\n\nconst ReportObstruction = connect(mapStateToProps, null)(ReportObstructionUI);\n\nexport default ReportObstruction;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux\";\nimport PageHome from \"./components/PageHome\";\nimport Page404 from './components/Page404';\nimport ReportObstruction from \"./components/ReportObstruction\";\n\nconst App = () => {\n  const basename = process.env.NODE_ENV === 'production' ? '/oak-bike-client' : null;\n  return (\n    <Provider store={store}>\n      <Router basename={basename}>\n        <Switch>\n          <Route exact path=\"/\" component={PageHome} />\n          <Route path=\"/report\" component={ReportObstruction} />\n          <Route path=\"/*\" component={Page404} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}