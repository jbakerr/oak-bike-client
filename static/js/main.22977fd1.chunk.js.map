{"version":3,"sources":["constants/actionsNames.js","redux/report/reducers.js","constants/report.js","redux/report/actions.js","redux/report/effects.js","redux/report/sagas.js","redux/index.js","components/PageHome/index.jsx","components/Page404/index.jsx","redux/report/selectors.js","components/ReportObstruction/Upload.jsx","components/ReportObstruction/Location.jsx","components/ReportObstruction/Details.jsx","components/ReportObstruction/ui.jsx","components/ReportObstruction/index.jsx","App.js","serviceWorker.js","index.js"],"names":["GET_USER_LOCATION","HANDLE_IMAGE_UPLOAD","HANDLE_REPORT_UPLOAD","initialState","status","coords","lat","lng","img_url","reportReducer","state","arguments","length","undefined","_ref","type","payload","Object","objectSpread","console","log","setReportImage","image","setReportCoords","bucketUrl","getUserLocation","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","location","error","doUploadImage","split","fileName","concat","text","i","charAt","Math","floor","random","makeid","formData","FormData","append","fetch","method","body","then","catch","doUploadReport","report","success","handleGetUserLocation","handleImageUpload","handleReportUpload","reportSagas","position","regenerator_default","a","wrap","_context","prev","next","call","sent","put","latitude","longitude","t0","message","stop","_marked","this","action","result","_context2","_marked2","_context3","_marked3","_context4","takeLatest","_marked4","sagaMiddleWare","createSagaMiddleware","reducers","combineReducers","store","createStore","applyMiddleware","run","PageHome","react_default","createElement","Link","to","Page404","reportState","selectReportStatus","createSelector","selectReportImage","selectReportCoords","Upload","uploadImage","setStatus","Fragment","dist_es","onDrop","files","_ref2","getRootProps","getInputProps","isDragActive","assign","className","Location","initZoom","setCoords","getLocation","_useState","useState","document","documentElement","clientHeight","_useState2","slicedToArray","height","setHeight","useEffect","handleResize","window","addEventListener","removeEventListener","_useState3","_useState4","center","setCenter","_useState5","_useState6","zoom","setZoom","Map","onDrag","event","target","getCenter","onZoom","getZoom","style","TileLayer","attribution","url","Marker","onClick","Details","uploadReport","ReportObstructionUI","props","ReportObstruction_Upload","ReportObstruction_Location","ReportObstruction_Details","ReportObstruction","connect","dispatch","setReportStatus","App","es","BrowserRouter","basename","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","src_App","getElementById","URL","process","href","origin","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22977fd1.chunk.js","sourcesContent":["export const SET_REPORT_STATUS = \"SET_REPORT_STATUS\";\nexport const SET_REPORT_IMAGE = \"SET_REPORT_IMAGE\";\nexport const SET_REPORT_COORDS = \"SET_REPORT_COORDS\";\n\nexport const GET_USER_LOCATION = \"GET_USER_LOCATION\";\nexport const HANDLE_IMAGE_UPLOAD = \"HANDLE_IMAGE_UPLOAD\";\nexport const HANDLE_REPORT_UPLOAD = \"HANDLE_REPORT_UPLOAD\";\n","import { UPLOAD } from \"../../constants/report\"\nimport { coordsOakland } from \"../../constants/report\";\nimport {\n  SET_REPORT_STATUS,\n  SET_REPORT_IMAGE,\n  SET_REPORT_COORDS,\n} from \"../../constants/actionsNames\";\n\nconst initialState = {\n  status: UPLOAD,\n  coords: coordsOakland,\n  img_url: null,\n};\n\nconst reportReducer = (state = initialState, {type, payload}) => {\n  switch(type) {\n    case SET_REPORT_STATUS:\n      return { ...state, status: payload };\n    case SET_REPORT_IMAGE:\n      return { ...state, img_url: payload };\n    case SET_REPORT_COORDS:\n      console.log(\"SET_REPORT_COORDS:\", payload);\n      return { ...state, coords: payload };\n    default:\n      return state;\n  }\n}\n\nexport default reportReducer;\n","export const UPLOAD = \"UPLOAD\";\nexport const IMAGE = \"IMAGE\";\nexport const LOCATION = \"LOCATION\";\nexport const DETAILS = \"DETAILS\";\nexport const SUBMISSION = \"SUBMISSION\";\nexport const COMPLETE = \"COMPLETE\";\n\nexport const USE_MY_LOCATION = \"USE_MY_LOCATION\";\nexport const DROP_PIN_ON_MAP = \"DROP_PIN_ON_MAP\";\nexport const ENTER_ADDRESS = \"ENTER_ADDRESS\";\n\nexport const coordsOakland = {\n  lat: 37.8131418,\n  lng: -122.2662702\n};\n\nexport const initDetails = {\n  name: '',\n  contact: '',\n  notes: '',\n};\n","import {\n  SET_REPORT_STATUS,\n  SET_REPORT_IMAGE,\n  SET_REPORT_COORDS,\n  GET_USER_LOCATION,\n  HANDLE_IMAGE_UPLOAD,\n  HANDLE_REPORT_UPLOAD,\n} from \"../../constants/actionsNames\";\n\nexport const setReportStatus = (status) => ({\n  type: SET_REPORT_STATUS,\n  payload: status,\n});\n\nexport const setReportImage = (image) => ({\n  type: SET_REPORT_IMAGE,\n  payload: image,\n});\n\nexport const setReportCoords = (coords) => ({\n  type: SET_REPORT_COORDS,\n  payload: coords,\n});\n\nexport const getUserLocation = () => ({\n  type: GET_USER_LOCATION,\n});\n\nexport const handleImageUpload = (image) => ({\n  type: HANDLE_IMAGE_UPLOAD,\n  payload: image,\n});\n\nexport const handleReportUpload = (report) => ({\n  type: HANDLE_REPORT_UPLOAD,\n  payload: report,\n});\n","const bucketUrl = 'https://s3-us-west-1.amazonaws.com/oak-bike/';\n\nconst gqlUrl = 'https://oakbike.herokuapp.com/gql';\nconst makeid = () => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 24; i += 1) text += possible.charAt(Math.floor(Math.random() * 62));\n  return text;\n};\n\nexport const getUserLocation = (options = {}) => new Promise((resolve, reject) => {\n  console.log(\"getUserLocation effect\")\n  navigator.geolocation.getCurrentPosition(\n    location => resolve(location),\n    error => reject(error),\n    options,\n  );\n});\n\nexport const doUploadImage = (image) => new Promise((resolve, reject) => {\n  console.log(\"doUploadImage, image:\", image);\n  const type = image.type.split('/')[1];\n  const fileName = `${makeid()}.${type}`\n  // setTimeout(() => { resolve(`${bucketUrl}${fileName}`) }, 1000);\n  const formData = new FormData();\n  formData.append('key', fileName);\n  formData.append('file', image);\n  const options = { method: \"POST\", body: formData };\n  fetch(bucketUrl, options)\n    .then(() => resolve(`${bucketUrl}${fileName}`))\n    .catch(error => reject(error));\n});\n\nexport const doUploadReport = (report) => new Promise((resolve, reject) => {\n  const options = { method: \"POST\", body: report };\n  fetch(gqlUrl, options)\n    .then(success => resolve(success))\n    .catch(error => reject(error));\n});\n","import { put, call, select, takeLatest } from \"redux-saga/effects\";\nimport {\n  GET_USER_LOCATION,\n  HANDLE_IMAGE_UPLOAD,\n  HANDLE_REPORT_UPLOAD,\n} from \"../../constants/actionsNames\";\nimport {\n  setReportImage,\n  setReportCoords,\n} from \"./actions\";\nimport {\n  getUserLocation,\n  doUploadImage,\n  doUploadReport,\n} from \"./effects\";\n\nfunction* handleGetUserLocation() {\n  console.log(\"handleGetUserLocation\");\n  try {\n    const position = yield call(getUserLocation);\n    console.log(\"success\")\n    yield put(setReportCoords({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    }));\n  } catch (error) {\n    // todo: error handling\n    console.error(`ERROR: ${error.message}`)\n  }\n}\n\nfunction* handleImageUpload(action) {\n  try {\n    console.log(\"handleImageUpload action:\", action);\n    const result = yield call(doUploadImage, action.payload);\n    console.log(\"upload successful:\", action.payload, \"\\n\\n\", result);\n    yield put(setReportImage(result));\n  } catch (error) {\n    // todo: error handling\n    console.error(`ERROR: ${error.message}`)\n  }\n}\n\nfunction* handleReportUpload(action) {\n  try {\n    const result = yield call(doUploadReport, action.payload);\n    // todo: what to do after upload?\n    console.log(\"REPORT UPLOADED\\n\\n\", action.payload, \"\\n\\n\", result);\n  } catch (error) {\n    // todo: error handling\n    console.error(`ERROR: ${error.message}`)\n  }\n}\n\nfunction* reportSagas() {\n  yield takeLatest(GET_USER_LOCATION, handleGetUserLocation);\n  yield takeLatest(HANDLE_IMAGE_UPLOAD, handleImageUpload);\n  yield takeLatest(HANDLE_REPORT_UPLOAD, handleReportUpload);\n}\n\nexport default reportSagas;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reportReducer from \"./report/reducers\";\nimport reportSagas from \"./report/sagas\";\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst reducers = combineReducers({\n  report: reportReducer,\n});\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(sagaMiddleWare),\n);\n\nsagaMiddleWare.run(reportSagas);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nconst PageHome = () => (\n  <div>\n    <h1>Home Page</h1>\n    <ul>\n      <li><Link to=\"/report\">Report Obstruction</Link></li>\n      <li><Link to=\"/nopers\">Bad Link</Link></li>\n    </ul>\n  </div>\n);\n\nexport default PageHome;\n","import React from \"react\";\n\nconst Page404 = () => (\n  <div>\n    <p>gosh darn we got us a 404 page not heckin found</p>\n  </div>\n);\n\nexport default Page404;\n","import { createSelector } from \"reselect\";\n\nexport const reportState = state => state.report || {};\n\nexport const selectReportStatus = createSelector(reportState, report => report.status);\n\nexport const selectReportImage = createSelector(reportState, report => report.img_url);\n\nexport const selectReportCoords = createSelector(reportState, report => {\n  console.log({...report.coords});\n  return {...report.coords}\n});\n\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { LOCATION } from \"../../constants/report\";\n\n// const makeid = () => {\n//   let text = '';\n//   const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n//   for (let i = 0; i < 24; i += 1) text += possible.charAt(Math.floor(Math.random() * 62));\n//   return text;\n// };\n\n// const bucketUrl = 'https://s3-us-west-1.amazonaws.com/oak-bike/';\n\nconst Upload = ({ uploadImage, setStatus }) => {\n  // const onDrop = async (files) => {\n  //   const file = files[0];\n  //   const fileName = `${makeid()}.${file.type.split('/')[1]}`\n  //   const formData = new FormData();\n  //   formData.append('key', fileName);\n  //   formData.append('file', file);\n  //   fetch(bucketUrl, {\n  //     method: \"POST\",\n  //     body: formData,\n  //   }).then(response => {\n  //     console.log(\"response:\", response);\n  //     const url = `${bucketUrl}${fileName}`;\n  //     setUpload(url);\n  //     setStatus(LOCATION);\n  //   }).catch(err => {\n  //     console.error(\"ERROR:\", err);\n  //   });    \n  // }\n\n  const onDrop = (files) => {\n    uploadImage(files[0]);\n    setStatus(LOCATION);\n  }\n\n  return (\n    <>\n      <p>Upload:</p>\n      <Dropzone onDrop={onDrop}>\n        {({getRootProps, getInputProps, isDragActive}) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={`dropzone ${isDragActive ? 'dropzone--isActive' : ''}`}\n            >\n              <input {...getInputProps()} />\n              {\n                isDragActive ?\n                  <p>Drop files here...</p> :\n                  <p>Try dropping some files here, or click to select files to upload.</p>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n    </>\n  );\n};\n\nexport default Upload;\n","import React, { useState, useEffect } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport { DETAILS } from \"../../constants/report\";\n\nconst mapBottomOffset = 60;\n\nconst Location = ({initZoom, coords, setStatus, setCoords, getLocation}) => {\n  // <Map> requires an absolute height\n  const [height, setHeight] = useState(document.documentElement.clientHeight - mapBottomOffset);\n  useEffect(() => {\n    const handleResize = () => {\n      setHeight(document.documentElement.clientHeight - mapBottomOffset);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []);\n\n  // const [center, setCenter] = useState(initCenter);\n  // const onDrag = (event) => {\n  //   setCenter(event.target.getCenter());\n  // }\n  // useEffect(() => {\n  //   setCenter(coords.lat === null || coords.lng === null ? initCenter : coords);\n  // }, [coords]);\n\n  const [center, setCenter] = useState(coords);\n  const onDrag = (event) => {\n    setCenter(event.target.getCenter());\n  }\n  useEffect(() => {\n    setCenter(coords);\n  }, [coords]);\n\n  const [zoom, setZoom] = useState(initZoom);\n  const onZoom = (event) => {\n    setZoom(event.target.getZoom());\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect getLocation\");\n    getLocation();\n  }, []);\n  const saveLocation = () => {\n    setCoords(center);\n    setStatus(DETAILS);\n  };\n\n  return (\n    <>\n      <Map\n        center={center}\n        zoom={zoom}\n        onDrag={onDrag}\n        onZoom={onZoom}\n        style={{ height }}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={center} />\n      </Map>\n      <button onClick={saveLocation}>Save Location</button>\n    </>\n  );\n};\n\nexport default Location;\n\n  // useEffect(\n  //   () => {\n  //     getUserLocation()\n  //       .then(location => {\n  //         const { latitude: lat, longitude: lng } = location.coords;\n  //         setCenter({ lat, lng });\n  //       })\n  //       .catch(() => {\n  //         console.warn(\"Could not get user location\");\n  //       });\n  //   }, []);\n","import React from \"react\";\n\n// import { SUBMISSION } from \"../../constants/report\";\n\nconst Details = ({ image, coords, uploadReport }) => {\n  return (\n    <>\n      <p>image: {image}</p>\n      <p>coords: [{coords.lat}, {coords.lng}]</p>\n      <p><button onClick={() => uploadReport()}>upload report</button></p>\n    </>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\n\nimport {\n  UPLOAD,\n  LOCATION,\n  DETAILS,\n  SUBMISSION,\n  COMPLETE,\n  coordsOakland,\n  // initDetails,\n} from \"../../constants/report\";\n\nimport Upload from './Upload';\nimport Location from './Location';\nimport Details from './Details';\n\nconst ReportObstructionUI = (props) => {\n  const {\n    status,\n    image,\n    coords,\n    setStatus,\n    setCoords,\n    getLocation,\n    uploadImage,\n    uploadReport,\n  } = props;\n\n  switch(status) {\n    case UPLOAD:\n      return <Upload\n        uploadImage={uploadImage}\n        setStatus={setStatus}\n      />;\n    case LOCATION:\n      return <Location\n        initZoom={14}\n        coords={coords}\n        setStatus={setStatus}\n        setCoords={setCoords}\n        getLocation={getLocation}\n      />;\n    case DETAILS:\n      return <Details\n        image={image}\n        coords={coords}\n        uploadReport={uploadReport}\n      />;\n    case SUBMISSION:\n      return (<p>...</p>);\n    case COMPLETE:\n      return (<p>...</p>);\n    default:\n      return null;    \n  }\n};\n\nexport default ReportObstructionUI;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  selectReportStatus,\n  selectReportImage,\n  selectReportCoords,\n} from '../../redux/report/selectors';\nimport {\n  setReportStatus,\n  setReportCoords,\n  getUserLocation,\n  handleImageUpload,\n  handleReportUpload,\n} from '../../redux/report/actions';\nimport ReportObstructionUI from './ui';\n\nconst mapState = (state) => ({\n  status: selectReportStatus(state),\n  image: selectReportImage(state),\n  coords: selectReportCoords(state),\n});\n\nconst mapDispatch = (dispatch) => ({\n  setStatus: (status) => dispatch(setReportStatus(status)),\n  setCoords: (coords) => dispatch(setReportCoords(coords)),\n  getLocation: () => dispatch(getUserLocation()),\n  uploadImage: (image) => dispatch(handleImageUpload(image)),\n  uploadReport: (report) => dispatch(handleReportUpload(report)),  \n});\n\nconst ReportObstruction = connect(mapState, mapDispatch)(ReportObstructionUI);\n\nexport default ReportObstruction;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux\";\nimport PageHome from \"./components/PageHome\";\nimport Page404 from './components/Page404';\n// import ReportObstruction3 from \"./components/ReportObstruction3\";\nimport ReportObstruction from \"./components/ReportObstruction\";\n\nconst App = () => {\n  const basename = process.env.NODE_ENV === 'production' ? '/oak-bike-client' : null;\n  return (\n    <Provider store={store}>\n      <Router basename={basename}>\n        <Switch>\n          <Route exact path=\"/\" component={PageHome} />\n          <Route path=\"/report\" component={ReportObstruction} />\n          <Route path=\"/*\" component={Page404} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}